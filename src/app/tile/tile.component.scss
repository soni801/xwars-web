@use "/src/variables";

:host > div
{
    // This is needed to make the highlighted thingy work
    position: relative;

    width: 2rem;
    height: 2rem;

    box-sizing: border-box;

    .player-marker
    {
        background: currentColor;
        height: 100%;
        mask-image: url("/assets/player-marker.png");
        mask-size: 100%;
        image-rendering: pixelated;

        // '2px' is just copied from styles.scss (the ".border" selector). This is a horrible way to do this.
        $border-offset: 2px;

        &.TopLeft
        {
            padding-bottom: $border-offset;
            margin-right: -$border-offset;

            mask-size: 200%;
            mask-position: top left;

        }

        &.TopRight
        {
            padding-bottom: $border-offset;
            margin-left: -$border-offset;

            mask-size: 200%;
            mask-position: top right;
        }

        &.BottomLeft
        {
            padding-bottom: $border-offset;
            margin-top: -$border-offset;
            margin-right: -$border-offset;

            mask-size: 200%;
            mask-position: bottom left;
        }

        &.BottomRight
        {
            padding-bottom: $border-offset;
            margin-top: -$border-offset;
            margin-left: -$border-offset;

            mask-size: 200%;
            mask-position: bottom right;
        }
    }

    // TODO: This is a really really really bad way of doing this, but it works for now
    .large-x-hover
    {
        display: none;
        height: 100%;
        background: color-mix(in srgb, currentColor 20%, transparent);

        mask-image: url("/assets/player-marker.png");
        mask-size: 200%;
        image-rendering: pixelated;

        // '2px' is just copied from styles.scss (the ".border" selector). This is a horrible way to do this.
        $border-offset: 2px;

        &.TopLeft
        {
            display: block;

            padding-bottom: $border-offset;
            margin-right: -$border-offset;

            mask-position: top left;

        }

        &.TopRight
        {
            display: block;

            padding-bottom: $border-offset;
            margin-left: -$border-offset;

            mask-position: top right;
        }

        &.BottomLeft
        {
            display: block;

            padding-bottom: $border-offset;
            margin-top: -$border-offset;
            margin-right: -$border-offset;

            mask-position: bottom left;
        }

        &.BottomRight
        {
            display: block;

            padding-bottom: $border-offset;
            margin-top: -$border-offset;
            margin-left: -$border-offset;

            mask-position: bottom right;
        }
    }

    // "Highlight" that is enabled when the tile is able to be captured by a player
    .highlighted
    {
        position: absolute;
        inset: 0;
        animation: highlight 2s alternate infinite;
    }

    // Display a dim player marker on hover
    .hover-marker
    {
        height: 100%;

        background: color-mix(in srgb, currentColor 20%, transparent);

        mask-image: url("/assets/player-marker.png");
        mask-size: 100%;
        image-rendering: pixelated;
    }

    // Line that is displayed when the tile has been used for an advantage in a specific direction
    .advantage-marker
    {
        position: absolute;
        inset: 0;

        &.vertical
        {
            background: linear-gradient(to left,
                transparent 0%,
                transparent calc(50% - 2px),
                variables.$button-foreground calc(50% - 2px),
                variables.$button-foreground 50%,
                variables.$button-foreground calc(50% + 2px),
                transparent calc(50% + 2px),
                transparent 100%);
        }

        &.horizontal
        {
            background: linear-gradient(to top,
                transparent 0%,
                transparent calc(50% - 2px),
                variables.$button-foreground calc(50% - 2px),
                variables.$button-foreground 50%,
                variables.$button-foreground calc(50% + 2px),
                transparent calc(50% + 2px),
                transparent 100%);
        }

        &.diagonal-top-left
        {
            background: linear-gradient(to top right,
                transparent 0%,
                transparent calc(50% - 2px),
                variables.$button-foreground calc(50% - 2px),
                variables.$button-foreground 50%,
                variables.$button-foreground calc(50% + 2px),
                transparent calc(50% + 2px),
                transparent 100%);
        }

        &.diagonal-top-right
        {
            background: linear-gradient(to top left,
                transparent 0%,
                transparent calc(50% - 2px),
                variables.$button-foreground calc(50% - 2px),
                variables.$button-foreground 50%,
                variables.$button-foreground calc(50% + 2px),
                transparent calc(50% + 2px),
                transparent 100%);
        }
    }
}

.color-top { border-top: 4px solid currentColor; }
.color-bottom { border-bottom: 4px solid currentColor; }
.color-left { border-left: 4px solid currentColor; }
.color-right { border-right: 4px solid currentColor; }

@keyframes highlight
{
    from { outline: 1px solid color-mix(in srgb, currentColor 15%, transparent); }
    to { outline: 1px solid color-mix(in srgb, currentColor 40%, transparent); }
}
